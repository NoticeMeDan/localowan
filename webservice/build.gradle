plugins {
    id 'application'
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.3.70'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.70'
    id "org.jetbrains.kotlin.plugin.jpa" version "1.3.70"
    id "org.jetbrains.kotlin.kapt" version "1.3.70"
}

group = 'com.noticemedan'
version = '1.0-SNAPSHOT'
java.sourceCompatibility = JavaVersion.VERSION_12

repositories {
    mavenCentral()
}

bootJar.enabled = false
jar.enabled = true

application {
    def myVersion = System.properties['versionOverride']
    if ((myVersion?.trim())) {
        version = myVersion
    } else {
        version = "1.0-SNAPSHOT"
    }

    mainClassName = 'com.noticemedan.finch.FinchApplicationKt'
    applicationDefaultJvmArgs = ["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:6001"]
}

distributions {
    main {
        distTar.archiveName = "finch-webservice.tar"
        distZip.enabled = false
        bootDistTar.enabled = false
        bootDistZip.enabled = false
    }
}

test {
    ignoreFailures = false
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.2.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.2.5.RELEASE'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.10.3'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.3.70'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.70'
    implementation 'org.liquibase:liquibase-core:3.8.7'
    implementation 'org.postgresql:postgresql:42.2.10'
    implementation "com.querydsl:querydsl-jpa:4.2.2"
    implementation "io.vavr:vavr-kotlin:0.10.2"
    implementation "com.vladmihalcea:hibernate-types-52:2.9.7"
    implementation "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.10.3"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.10.3"
    implementation "com.squareup.okhttp3:okhttp:4.5.0"
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    // JsonSchema generation
    implementation "com.github.victools:jsonschema-generator:4.7.0"
    implementation "com.github.imifou:jsonschema-module-addon:1.2.1"

    // JsonSchema validation
    implementation "com.github.java-json-tools:json-schema-validator:2.2.12"

    kapt "com.querydsl:querydsl-apt:4.2.1:jpa"

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.2.5.RELEASE'
    testImplementation "com.nhaarman:mockito-kotlin:1.6.0"
    testImplementation 'com.h2database:h2:1.4.200'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '12'
    }
}
